// script.js

// 1. –§—É–Ω–∫—Ü—ñ—è ¬´–î—ñ–∞–ª–æ–≥ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º¬ª
function dialogWithUser() {
    alert("–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ —Ö—ñ–º—á–∏—Å—Ç–∫–∏ ¬´–ß–∏—Å—Ç–æ—Ç–∞¬ª!");

    let garment;
    let attempts = 0;

    // –¶–∏–∫–ª ‚Äî –∑–∞–ø–∏—Ç—É–≤–∞—Ç–∏, –ø–æ–∫–∏ –Ω–µ –±—É–¥–µ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–ø–æ—Ä–æ–∂–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è –∞–±–æ –Ω–µ –ø–µ—Ä–µ–≤–∏—â–µ–Ω–æ 3 —Å–ø—Ä–æ–±–∏
    while (!garment && attempts < 3) {
        garment = prompt("–Ø–∫–µ –≤–±—Ä–∞–Ω–Ω—è –≤–∏ –±–∞–∂–∞—î—Ç–µ –ø–æ—á–∏—Å—Ç–∏—Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ?");
        if (!garment) {
            alert("–í–∏ –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–≤–µ–ª–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
            attempts++;
        }
    }

    if (!garment) {
        alert("–°–ø—Ä–æ–±–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–µ—Ä–µ–≤–∏—â–µ–Ω–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –ø—ñ–∑–Ω—ñ—à–µ.");
        return;
    }

    const confirmed = confirm(`–í–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î—Ç–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ —á–∏—Å—Ç–∫—É: "${garment}"?`);
    if (confirmed) {
        themedBackgroundChange(); // –ó–º—ñ–Ω–∞ —Ñ–æ–Ω—É –Ω–∞ 30 —Å–µ–∫
        alert(`–î—è–∫—É—î–º–æ! –í–∞—à–µ "${garment}" –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —á–µ—Ä–∑—ñ –Ω–∞ –æ–±—Ä–æ–±–∫—É.`);
    } else {
        alert("–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.");
    }
}
  
// 2. –§—É–Ω–∫—Ü—ñ—è –≤–∏–≤–æ–¥—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞
function showDeveloperInfo(lastName, firstName, position = "JS-—Ä–æ–∑—Ä–æ–±–Ω–∏–∫") {
    alert(`–†–æ–∑—Ä–æ–±–Ω–∏–∫ —Å—Ç–æ—Ä—ñ–Ω–∫–∏:\n${lastName} ${firstName}\n–ü–æ—Å–∞–¥–∞: ${position}`);
}

// 3. –§—É–Ω–∫—Ü—ñ—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –¥–≤–æ—Ö —Ä—è–¥–∫—ñ–≤
function compareStrings() {
    const a = prompt("–í–≤–µ–¥—ñ—Ç—å –ø–µ—Ä—à–∏–π —Ç–∏–ø —Ç–∫–∞–Ω–∏–Ω–∏ –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è:");
    const b = prompt("–í–≤–µ–¥—ñ—Ç—å –¥—Ä—É–≥–∏–π —Ç–∏–ø —Ç–∫–∞–Ω–∏–Ω–∏ –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è:");
    if (a === null || b === null) {
        alert("–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.");
        return;
    }
    const greater = (a > b) ? a : (b > a) ? b : null;
    if (greater) {
        alert(`–ó–∞ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ—ñ—î—é –±—ñ–ª—å—à–∏–π —Ä—è–¥–æ–∫: "${greater}"`);
    } else {
        alert("–†—è–¥–∫–∏ –æ–¥–Ω–∞–∫–æ–≤—ñ.");
    }
}

// 4. –ó–º—ñ–Ω–∞ —Ñ–æ–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –Ω–∞ 30 —Å–µ–∫—É–Ω–¥
function themedBackgroundChange() {
    const body = document.body;
    const originalBG = body.style.background;

    body.style.background = 'url("images/clean-laundry.jpg") center/cover no-repeat';

    setTimeout(() => {
        body.style.background = originalBG;
    }, 30000);
}

// 5. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ –∫–∞—Ä—Ç—É
function goToMap() {
    if (confirm("–í—ñ–¥–∫—Ä–∏—Ç–∏ –Ω–∞—à—É —Ö—ñ–º—á–∏—Å—Ç–∫—É –Ω–∞ Google –ö–∞—Ä—Ç–∞—Ö?")) {
        location.href = "https://www.google.com/maps?q=50.4488974,30.456977";
    }
}

// 6. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è DOM –º–µ—Ç–æ–¥—ñ–≤
function fullDomManipulation() {
    // 1. getElementById + innerHTML
    const adv = document.getElementById("our-advantages");
    if (adv) {
        adv.innerHTML += '<p style="text-align: center;">–ú–∏ –ø–æ—Å—Ç—ñ–π–Ω–æ –æ–Ω–æ–≤–ª—é—î–º–æ –Ω–∞—à—ñ –ø–æ—Å–ª—É–≥–∏!</p>';
    }

    // 2. querySelectorAll + outerHTML
    const navLinks = document.querySelectorAll(".nav-link");
    if (navLinks.length > 0) {
        navLinks[0].outerHTML = '<a href="index.html" class="nav-link">üè† –ì–æ–ª–æ–≤–Ω–∞ (–æ–Ω–æ–≤–ª–µ–Ω–æ)</a>';
    }

    // 3. textContent
    const contactInfo = document.getElementById("contact-info");
    if (contactInfo) {
        contactInfo.textContent += " –ú–∏ –∑–∞–≤–∂–¥–∏ –ø–æ—Ä—É—á —ñ–∑ –≤–∞–º–∏!";
    }

    // 4. createElement + createTextNode
    const newLi = document.createElement("li");
    const textNode = document.createTextNode("–ê–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä—ñ–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ —Ç–∫–∞–Ω–∏–Ω");
    console.log(textNode.data);
    newLi.appendChild(textNode);
    const ul = document.querySelector("ul");
    if (ul) {
        ul.appendChild(newLi);
    }

    // 5. prepend
    const firstLi = document.createElement("li");
    firstLi.textContent = "–ú–∏ –ø—Ä–∞—Ü—é—î–º–æ –¥–ª—è –≤–∞—Å –ø–æ–Ω–∞–¥ 10 —Ä–æ–∫—ñ–≤!";
    ul?.prepend(firstLi);

    // 6. after
    const paragraphs = document.querySelectorAll("div > p");
    paragraphs.forEach(p => {
        if (p.textContent.includes("—ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥")) {
            const note = document.createElement("p");
            note.textContent = "–ù–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ —â–æ–¥–Ω—è!";
            p.after(note);
        }
    });

    // 7. replaceWith
    const buttonToReplace = document.querySelector("button.nav-link");
    if (buttonToReplace) {
        const newBtn = document.createElement("button");
        newBtn.className = "nav-link";
        newBtn.textContent = "üßº –û–Ω–æ–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —á–∏—Å—Ç–∫–∏";
        newBtn.onclick = dialogWithUser;
        buttonToReplace.replaceWith(newBtn);
    }

    // 8. remove
    const oldLinks = document.querySelector(".links-for-pictures");
    if (oldLinks) oldLinks.remove();

    // 9. document.write
    if (location.pathname.endsWith("index.html")) {
        const promoBanner = document.createElement("p");
        promoBanner.innerHTML = "‚ú® –°—å–æ–≥–æ–¥–Ω—ñ –¥—ñ—î –∑–Ω–∏–∂–∫–∞ 10% –Ω–∞ —á–∏—Å—Ç–∫—É –∫–æ—Å—Ç—é–º—ñ–≤!";
        promoBanner.style.textAlign = "center";
        document.body.prepend(promoBanner);
    }
}


// –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ–π
window.addEventListener("DOMContentLoaded", () => {
    // 1. –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —á–∏—Å—Ç–∫–∏
    const orderBtn = document.createElement("button");
    orderBtn.textContent = "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —á–∏—Å—Ç–∫–∏";
    orderBtn.onclick = dialogWithUser;
    orderBtn.className = "nav-link";
    const firstPara = document.querySelector("div > p");
    if (firstPara) {
      firstPara.parentNode.insertBefore(orderBtn, firstPara);
    }
  
    // 2. –ü—Ä–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞
    if (location.pathname.endsWith("contacts.html")) {
      const devBtn = document.createElement("button");
      devBtn.textContent = "–ü—Ä–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞";
      devBtn.onclick = () => showDeveloperInfo("–î—Ä–∞–≥–∞","–¢–∞—Ä–∞—Å");
      devBtn.className = "nav-link";
      const geoHeading = document.querySelector('#frame') ||
        Array.from(document.querySelectorAll("h3"))
             .find(h => h.textContent.trim().startsWith("–ù–∞—à–∞ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—è"));
      if (geoHeading) {
        geoHeading.parentNode.insertBefore(devBtn, geoHeading);
      }
    }
  
    // 3. –ü–æ—Ä—ñ–≤–Ω—è—Ç–∏ —Ç–∫–∞–Ω–∏–Ω–∏
    if (location.pathname.endsWith("services.html")) {
      const compBtn = document.createElement("button");
      compBtn.textContent = "–ü–æ—Ä—ñ–≤–Ω—è—Ç–∏ —Ç–∫–∞–Ω–∏–Ω–∏";
      compBtn.onclick = compareStrings;
      compBtn.className = "nav-link";
      const servHeading = document.getElementById("services-list");
      if (servHeading) {
        servHeading.parentNode.insertBefore(compBtn, servHeading);
      }
    }
  
    // 4. –ü–µ—Ä–µ–π—Ç–∏ –¥–æ Google maps
    if (location.pathname.endsWith("contacts.html")) {
        const mapBtn = document.createElement("button");
        mapBtn.textContent = "–ü–µ—Ä–µ–π—Ç–∏ –¥–æ Google maps";
        mapBtn.onclick = goToMap;
        mapBtn.className = "nav-link";
    
        const mapIframe = document.querySelector('iframe[title="–ö–∞—Ä—Ç–∞ —Ö—ñ–º—á–∏—Å—Ç–∫–∏"]');
        if (mapIframe) {
            const wrapper = document.createElement("div");
            wrapper.style.textAlign = "center";
            wrapper.appendChild(mapBtn);
            mapIframe.parentNode.insertBefore(wrapper, mapIframe.nextSibling);
        }
    }    
  
    const updateBtn = document.createElement("button");
    updateBtn.textContent = "–û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É";
    updateBtn.className = "nav-link";
    updateBtn.onclick = fullDomManipulation;
    document.body.append(updateBtn);
  });